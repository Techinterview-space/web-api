version: "3.4"

networks:
  interviewer-network:
    driver: bridge

services:
  database.api:
    container_name: api-database
    image: postgres:13
    restart: always
    environment:
      POSTGRES_USER: pi
      POSTGRES_PASSWORD: Str0ngPass!
      POSTGRES_DB: interviewer_core
      POSTGRES_ADMIN_PASSWORD: Str0ngPass!
    ports:
      - 5432:5432
    networks:
      - interviewer-network

  api:
    container_name: interviewer-api
    image: interviewer/api
    restart: always
    depends_on:
      - database.api
      - kafka
      - elasticsearch
    build:
      context: ./src
      dockerfile: Dockerfile
    environment:
      ASPNETCORE_Kestrel__Certificates__Default__Password: password
      ASPNETCORE_Kestrel__Certificates__Default__Path: /https/aspnetapp.pfx
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:5001
      ASPNETCORE_HTTPS_PORT: 5001
      ConnectionStrings__Database: Host=database.api;Database=interviewer_core;User Id=pi;Password=Str0ngPass!
      ConnectionStrings__Elasticsearch: http://elasticsearch:9200
    ports:
      - 5001:5001
    networks:
      - interviewer-network
    volumes:
      - ~/.aspnet/https:/https:ro

  elasticsearch:
    container_name: interviewer-elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.0.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - 9200:9200
    networks:
      - interviewer-network

  kibana:
    container_name: interviewer-kibana
    image: docker.elastic.co/kibana/kibana:8.0.0
    environment:
      SERVER_NAME: kibana.local
      ELASTICSEARCH_URL: http://elasticsearch:9200
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601
    networks:
      - interviewer-network

  localstack:
    container_name: interviewer-localstack
    image: localstack/localstack
    restart: always
    ports:
      # - 4510-4559:4510-4559
      - 4566:4566
      - 4571:4571
    environment:
      - SERVICES=s3,dynamodb
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - ./.aws:/docker-entrypoint-initaws.d
    networks:
      - interviewer-network

volumes:
  elasticsearch-data:
