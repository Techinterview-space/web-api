name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # tests:
  #   runs-on: ubuntu-latest
  #   env:
  #     solution-file: ./src/Petrel.Taxer.sln
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Backend build and test
  #       uses: actions/setup-dotnet@v1
  #       with:
  #         dotnet-version: "6.0.x"
  #     - name: Install dependencies
  #       run: dotnet restore ${{env.solution-file}}
  #     - name: Test
  #       run: dotnet test ${{env.solution-file}} --no-restore --verbosity normal
  build:
    # needs: tests
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    env:
      DO_TOKEN: ${{ secrets.DO_TOKEN }}
      AUTH0_AUDIENCE: ${{ env.AUTH0_AUDIENCE }}
      DATABASE_CONNECTION_STRING: ${{ env.DATABASE_CONNECTION_STRING }}
      PROD_ELASTICSEARCH_LINK: ${{ env.PROD_ELASTICSEARCH_LINK }}
      S3_ACCESS_KEY: ${{ env.S3_ACCESS_KEY }}
      S3_ACCESS_SECRET: ${{ env.S3_ACCESS_SECRET }}
      S3_BUCKET_NAME: ${{ env.S3_BUCKET_NAME }}
      SENDGRID_API_KEY: ${{ env.SENDGRID_API_KEY }}
    container:
      image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
    steps:
      - uses: actions/checkout@v3
      - name: Docker build and push
        run: |
          docker info
          sed -i "s,{AUTH0_AUDIENCE},${{env.AUTH0_AUDIENCE}},g;" src/Web.Api/appsettings.Production.json
          cd src
          docker login -u ${{ env.DO_TOKEN }} -p ${{ env.DO_TOKEN }} registry.digitalocean.com/techinterview
          docker build -f Dockerfile -t ${{ secrets.CR }}/backend:${{ github.sha }} .
          docker push ${{ secrets.CR }}/backend:${{ github.sha }}
  deploy-ssh:
    if: github.event_name == 'push'
    container:
      image: docker:stable
    env:
      DO_TOKEN: ${{ secrets.DO_TOKEN }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Deploy ssh
        run: |
          sed -i "s,{api},${{ secrets.CR }}/backend:${{ github.sha }},g" docker-compose.deploy.yml
      - name: copy file via ssh key
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.IP }}
          username: devops
          key: ${{ secrets.SSH_KEY_PRIVATE }}
          port: ${{ secrets.PORT }}
          source: "docker-compose.deploy.yml"
          target: "/home/devops/deploy"
      - name: Execute commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.IP }}
          username: devops
          key: ${{ secrets.SSH_KEY_PRIVATE }}
          port: ${{ secrets.PORT }}
          script_stop: true
          script: |
            cd ~/deploy
            docker login -u ${{ env.DO_TOKEN }} -p ${{ env.DO_TOKEN }} registry.digitalocean.com/techinterview
            docker-compose -f docker-compose.deploy.yml pull
            docker-compose -f docker-compose.deploy.yml up -d
